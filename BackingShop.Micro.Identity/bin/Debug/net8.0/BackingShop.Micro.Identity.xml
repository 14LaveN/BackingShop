<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BackingShop.Micro.Identity</name>
    </assembly>
    <members>
        <member name="M:BackingShop.Micro.Identity.Common.DependencyInjection.DiAuthorization.AddAuthorizationExtension(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Registers the necessary services with the DI framework.
            </summary>
            <param name="services">The service collection.</param>
            <param name="configuration">The configuration.</param>
            <returns>The same service collection.</returns>
        </member>
        <member name="M:BackingShop.Micro.Identity.Common.DependencyInjection.DiCaching.AddCaching(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Registers the necessary services with the DI framework.
            </summary>
            <param name="services">The service collection.</param>
            <returns>The same service collection.</returns>
        </member>
        <member name="M:BackingShop.Micro.Identity.Common.DependencyInjection.DiDatabase.AddDatabase(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Registers the necessary services with the DI framework.
            </summary>
            <param name="services">The service collection.</param>
            <param name="configuration">The configuration.</param>
            <returns>The same service collection.</returns>
        </member>
        <member name="M:BackingShop.Micro.Identity.Common.DependencyInjection.DiHelpers.AddHelpers(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Registers the necessary services with the DI framework.
            </summary>
            <param name="services">The service collection.</param>
            <returns>The same service collection.</returns>
        </member>
        <member name="M:BackingShop.Micro.Identity.Common.DependencyInjection.DiLogging.AddLoggingExtension(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Registers the necessary services with the DI framework.
            </summary>
            <param name="services">The service collection.</param>
            <param name="configuration">The configuration.</param>
            <returns>The same service collection.</returns>
        </member>
        <member name="M:BackingShop.Micro.Identity.Common.DependencyInjection.DiMediator.AddMediatr(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Registers the necessary services with the DI framework.
            </summary>
            <param name="services">The service collection.</param>
            <returns>The same service collection.</returns>
        </member>
        <member name="M:BackingShop.Micro.Identity.Common.DependencyInjection.DiValidator.AddValidators(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Registers the necessary services with the DI framework.
            </summary>
            <param name="services">The service collection.</param>
            <returns>The same service collection.</returns>
        </member>
        <member name="T:BackingShop.Micro.Identity.Contracts.Users.ChangeName.ChangeNameRequest">
            <summary>
            Represents the change name request.
            </summary>
            <param name="FirstName">The first name.</param>
            <param name="LastName">The last name.</param>
        </member>
        <member name="M:BackingShop.Micro.Identity.Contracts.Users.ChangeName.ChangeNameRequest.#ctor(System.String,System.String)">
            <summary>
            Represents the change name request.
            </summary>
            <param name="FirstName">The first name.</param>
            <param name="LastName">The last name.</param>
        </member>
        <member name="P:BackingShop.Micro.Identity.Contracts.Users.ChangeName.ChangeNameRequest.FirstName">
            <summary>The first name.</summary>
        </member>
        <member name="P:BackingShop.Micro.Identity.Contracts.Users.ChangeName.ChangeNameRequest.LastName">
            <summary>The last name.</summary>
        </member>
        <member name="T:BackingShop.Micro.Identity.Contracts.Users.Login.LoginRequest">
            <summary>
            Represents the login request record class.
            </summary>
            <param name="UserName">The user name.</param>
            <param name="Password">The password</param>
        </member>
        <member name="M:BackingShop.Micro.Identity.Contracts.Users.Login.LoginRequest.#ctor(System.String,System.String)">
            <summary>
            Represents the login request record class.
            </summary>
            <param name="UserName">The user name.</param>
            <param name="Password">The password</param>
        </member>
        <member name="P:BackingShop.Micro.Identity.Contracts.Users.Login.LoginRequest.UserName">
            <summary>The user name.</summary>
        </member>
        <member name="P:BackingShop.Micro.Identity.Contracts.Users.Login.LoginRequest.Password">
            <summary>The password</summary>
        </member>
        <member name="T:BackingShop.Micro.Identity.Contracts.Users.Register.RegisterRequest">
            <summary>
            Represents the register request record class.
            </summary>
            <param name="FirstName">The first name.</param>
            <param name="LastName">The last name.</param>
            <param name="Email">The email.</param>
            <param name="Password">The password.</param>
            <param name="UserName">The user name.</param>
        </member>
        <member name="M:BackingShop.Micro.Identity.Contracts.Users.Register.RegisterRequest.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Represents the register request record class.
            </summary>
            <param name="FirstName">The first name.</param>
            <param name="LastName">The last name.</param>
            <param name="Email">The email.</param>
            <param name="Password">The password.</param>
            <param name="UserName">The user name.</param>
        </member>
        <member name="P:BackingShop.Micro.Identity.Contracts.Users.Register.RegisterRequest.FirstName">
            <summary>The first name.</summary>
        </member>
        <member name="P:BackingShop.Micro.Identity.Contracts.Users.Register.RegisterRequest.LastName">
            <summary>The last name.</summary>
        </member>
        <member name="P:BackingShop.Micro.Identity.Contracts.Users.Register.RegisterRequest.Email">
            <summary>The email.</summary>
        </member>
        <member name="P:BackingShop.Micro.Identity.Contracts.Users.Register.RegisterRequest.Password">
            <summary>The password.</summary>
        </member>
        <member name="P:BackingShop.Micro.Identity.Contracts.Users.Register.RegisterRequest.UserName">
            <summary>The user name.</summary>
        </member>
        <member name="T:BackingShop.Micro.Identity.Controllers.V1.UsersController">
            <summary>
            Represents the users controller class.
            </summary>
            <param name="sender">The sender.</param>
            <param name="userRepository">The user repository.</param>
        </member>
        <member name="M:BackingShop.Micro.Identity.Controllers.V1.UsersController.#ctor(MediatR.ISender,BackingShop.Database.Identity.Data.Interfaces.IUserRepository)">
            <summary>
            Represents the users controller class.
            </summary>
            <param name="sender">The sender.</param>
            <param name="userRepository">The user repository.</param>
        </member>
        <member name="M:BackingShop.Micro.Identity.Controllers.V1.UsersController.Login(BackingShop.Micro.Identity.Contracts.Users.Login.LoginRequest)">
            <summary>
            Login user.
            </summary>
            <param name="request">The <see cref="T:BackingShop.Micro.Identity.Contracts.Users.Login.LoginRequest"/> class.</param>
            <returns>Base information about login user method.</returns>
            <remarks>
            Example request:
            </remarks>
            <response code="200">OK.</response>
            <response code="401">Unauthorized.</response>
            <response code="500">Internal server error.</response>
        </member>
        <member name="M:BackingShop.Micro.Identity.Controllers.V1.UsersController.Register(BackingShop.Micro.Identity.Contracts.Users.Register.RegisterRequest)">
            <summary>
            Register user.
            </summary>
            <param name="request">The <see cref="T:BackingShop.Micro.Identity.Contracts.Users.Register.RegisterRequest"/> class.</param>
            <returns>Base information about register user method.</returns>
            <remarks>
            Example request:
            </remarks>
            <response code="200">OK.</response>
            <response code="401">Unauthorized.</response>
            <response code="500">Internal server error.</response>
        </member>
        <member name="M:BackingShop.Micro.Identity.Controllers.V1.UsersController.ChangePassword(System.String)">
            <summary>
            Change password from user.
            </summary>
            <param name="password">The password.</param>
            <returns>Base information about change password from user method.</returns>
            <remarks>
            Example request:
            </remarks>
            <response code="200">OK.</response>
            <response code="400">Bad request.</response>
            <response code="500">Internal server error.</response>
        </member>
        <member name="M:BackingShop.Micro.Identity.Controllers.V1.UsersController.ChangeName(BackingShop.Micro.Identity.Contracts.Users.ChangeName.ChangeNameRequest)">
            <summary>
            Change name from user.
            </summary>
            <param name="request">The request.</param>
            <returns>Base information about change name from user method.</returns>
            <remarks>
            Example request:
            </remarks>
            <response code="200">OK.</response>
            <response code="400">Bad request.</response>
            <response code="500">Internal server error.</response>
        </member>
        <member name="T:BackingShop.Micro.Identity.Extensions.AesEncryptor">
            <summary>
            Represents the aes encryptor class.
            </summary>
        </member>
        <member name="M:BackingShop.Micro.Identity.Extensions.AesEncryptor.Encrypt(System.String,System.String)">
            <summary>
            Encrypt some information.
            </summary>
            <param name="key">The string key.</param>
            <param name="content">The content.</param>
            <returns>Returns encrypt string.</returns>
        </member>
        <member name="M:BackingShop.Micro.Identity.Extensions.AesEncryptor.Decrypt(System.String,System.String)">
            <summary>
            Decrypt some information.
            </summary>
            <param name="key">The string key.</param>
            <param name="encryptedContent">The encrypted content.</param>
            <returns>Returns decrypted string.</returns>
        </member>
        <member name="T:BackingShop.Micro.Identity.Extensions.JwtExtensions">
            <summary>
            Represents the json web token extensions class.
            </summary>
        </member>
        <member name="M:BackingShop.Micro.Identity.Extensions.JwtExtensions.GenerateRefreshToken(BackingShop.Domain.Identity.Entities.User,BackingShop.Application.Core.Settings.User.JwtOptions)">
            <summary>
            Generate new refresh token by options.
            </summary>
            <param name="user">The user.</param>
            <param name="jwtOptions">The json web token options.</param>
            <returns>Returns refresh token.</returns>
        </member>
        <member name="M:BackingShop.Micro.Identity.Extensions.JwtExtensions.GenerateAccessToken(BackingShop.Domain.Identity.Entities.User,BackingShop.Application.Core.Settings.User.JwtOptions)">
            <summary>
            Generate new access token by options.
            </summary>
            <param name="user">The user.</param>
            <param name="jwtOptions">The json web token options.</param>
            <returns>Returns access token.</returns>
        </member>
        <member name="T:BackingShop.Micro.Identity.Extensions.StringRandomizer">
            <summary>
            Represents the string randomizer class.
            </summary>
        </member>
        <member name="M:BackingShop.Micro.Identity.Extensions.StringRandomizer.Randomize(System.Int32)">
            <summary>
            Randomize the string.
            </summary>
            <param name="length">The length.</param>
            <returns>Returns randomizing string.</returns>
        </member>
        <member name="T:BackingShop.Micro.Identity.Mediatr.Behaviour.UserTransactionBehavior`2">
            <summary>
            Represents the <see cref="T:BackingShop.Domain.Identity.Entities.User"/> transaction behaviour class.
            </summary>
        </member>
        <member name="M:BackingShop.Micro.Identity.Mediatr.Behaviour.UserTransactionBehavior`2.#ctor(BackingShop.Database.Common.Abstractions.IUnitOfWork,BackingShop.Database.Common.BaseDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BackingShop.Micro.Identity.Mediatr.Behaviour.UserTransactionBehavior`2"/> class.
            </summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="userDbContext">The base database context.</param>
        </member>
        <member name="M:BackingShop.Micro.Identity.Mediatr.Behaviour.UserTransactionBehavior`2.Handle(`0,MediatR.RequestHandlerDelegate{`1},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:BackingShop.Micro.Identity.Mediatr.Commands.ChangeName.ChangeNameCommand">
            <summary>
            Represents the change <see cref="T:BackingShop.Domain.Common.ValueObjects.Name"/> command record.
            </summary>
            <param name="FirstName">The first name.</param>
            <param name="LastName">The last name.</param>
        </member>
        <member name="M:BackingShop.Micro.Identity.Mediatr.Commands.ChangeName.ChangeNameCommand.#ctor(BackingShop.Domain.Common.ValueObjects.FirstName,BackingShop.Domain.Common.ValueObjects.LastName)">
            <summary>
            Represents the change <see cref="T:BackingShop.Domain.Common.ValueObjects.Name"/> command record.
            </summary>
            <param name="FirstName">The first name.</param>
            <param name="LastName">The last name.</param>
        </member>
        <member name="P:BackingShop.Micro.Identity.Mediatr.Commands.ChangeName.ChangeNameCommand.FirstName">
            <summary>The first name.</summary>
        </member>
        <member name="P:BackingShop.Micro.Identity.Mediatr.Commands.ChangeName.ChangeNameCommand.LastName">
            <summary>The last name.</summary>
        </member>
        <member name="T:BackingShop.Micro.Identity.Mediatr.Commands.ChangeName.ChangeNameCommandHandler">
            <summary>
            Represents the <see cref="T:BackingShop.Micro.Identity.Mediatr.Commands.ChangeName.ChangeNameCommand"/> handler.
            </summary>
        </member>
        <member name="M:BackingShop.Micro.Identity.Mediatr.Commands.ChangeName.ChangeNameCommandHandler.#ctor(BackingShop.Database.Common.Abstractions.IUnitOfWork,Microsoft.AspNetCore.Identity.UserManager{BackingShop.Domain.Identity.Entities.User},BackingShop.Application.Core.Abstractions.Helpers.JWT.IUserIdentifierProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:BackingShop.Micro.Identity.Mediatr.Commands.ChangeName.ChangeNameCommandHandler"/> class.
            </summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="userManager">The user manager.</param>
            <param name="userIdentifier">The user identifier provider.</param>
        </member>
        <member name="M:BackingShop.Micro.Identity.Mediatr.Commands.ChangeName.ChangeNameCommandHandler.Handle(BackingShop.Micro.Identity.Mediatr.Commands.ChangeName.ChangeNameCommand,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:BackingShop.Micro.Identity.Mediatr.Commands.ChangeName.ChangeNameCommandValidator">
            <summary>
            Represents the <see cref="T:BackingShop.Micro.Identity.Mediatr.Commands.ChangeName.ChangeNameCommand"/> validator class.
            </summary>
        </member>
        <member name="M:BackingShop.Micro.Identity.Mediatr.Commands.ChangeName.ChangeNameCommandValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BackingShop.Micro.Identity.Mediatr.Commands.ChangeName.ChangeNameCommandValidator"/> class.
            </summary>
        </member>
        <member name="T:BackingShop.Micro.Identity.Mediatr.Commands.ChangePassword.ChangePasswordCommand">
            <summary>
            Represents the change password command record class.
            </summary>
            <param name="Password">The password.</param>
        </member>
        <member name="M:BackingShop.Micro.Identity.Mediatr.Commands.ChangePassword.ChangePasswordCommand.#ctor(System.String)">
            <summary>
            Represents the change password command record class.
            </summary>
            <param name="Password">The password.</param>
        </member>
        <member name="P:BackingShop.Micro.Identity.Mediatr.Commands.ChangePassword.ChangePasswordCommand.Password">
            <summary>The password.</summary>
        </member>
        <member name="T:BackingShop.Micro.Identity.Mediatr.Commands.ChangePassword.ChangePasswordCommandHandler">
            <summary>
            Represents the <see cref="T:BackingShop.Micro.Identity.Mediatr.Commands.ChangePassword.ChangePasswordCommand"/> handler.
            </summary>
        </member>
        <member name="M:BackingShop.Micro.Identity.Mediatr.Commands.ChangePassword.ChangePasswordCommandHandler.#ctor(BackingShop.Database.Identity.Data.Interfaces.IUserUnitOfWork,Microsoft.AspNetCore.Identity.UserManager{BackingShop.Domain.Identity.Entities.User},BackingShop.Application.Core.Abstractions.Helpers.JWT.IUserIdentifierProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:BackingShop.Micro.Identity.Mediatr.Commands.ChangePassword.ChangePasswordCommandHandler"/> class.
            </summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="userManager">The user manager.</param>
            <param name="userIdentifier">The user identifier provider.</param>
        </member>
        <member name="M:BackingShop.Micro.Identity.Mediatr.Commands.ChangePassword.ChangePasswordCommandHandler.Handle(BackingShop.Micro.Identity.Mediatr.Commands.ChangePassword.ChangePasswordCommand,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:BackingShop.Micro.Identity.Mediatr.Commands.ChangePassword.ChangePasswordCommandValidator">
            <summary>
            Represents the <see cref="T:BackingShop.Micro.Identity.Mediatr.Commands.ChangePassword.ChangePasswordCommand"/> validator.
            </summary>
        </member>
        <member name="M:BackingShop.Micro.Identity.Mediatr.Commands.ChangePassword.ChangePasswordCommandValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BackingShop.Micro.Identity.Mediatr.Commands.ChangePassword.ChangePasswordCommandValidator"/> class.
            </summary>
        </member>
        <member name="T:BackingShop.Micro.Identity.Mediatr.Commands.Login.LoginCommand">
            <summary>
            Represents the login command record class.
            </summary>
            <param name="UserName">The user name.</param>
            <param name="Password">The password.</param>
        </member>
        <member name="M:BackingShop.Micro.Identity.Mediatr.Commands.Login.LoginCommand.#ctor(System.String,BackingShop.Domain.Common.ValueObjects.Password)">
            <summary>
            Represents the login command record class.
            </summary>
            <param name="UserName">The user name.</param>
            <param name="Password">The password.</param>
        </member>
        <member name="P:BackingShop.Micro.Identity.Mediatr.Commands.Login.LoginCommand.UserName">
            <summary>The user name.</summary>
        </member>
        <member name="P:BackingShop.Micro.Identity.Mediatr.Commands.Login.LoginCommand.Password">
            <summary>The password.</summary>
        </member>
        <member name="T:BackingShop.Micro.Identity.Mediatr.Commands.Login.LoginCommandHandler">
            <summary>
            Represents the login command handler class.
            </summary>
            <param name="logger">The logger.</param>
            <param name="userManager">The user manager.</param>
            <param name="jwtOptions">The json web token options.</param>
            <param name="signInManager">The sign in manager.</param>
        </member>
        <member name="M:BackingShop.Micro.Identity.Mediatr.Commands.Login.LoginCommandHandler.#ctor(Microsoft.Extensions.Logging.ILogger{BackingShop.Micro.Identity.Mediatr.Commands.Login.LoginCommandHandler},Microsoft.AspNetCore.Identity.UserManager{BackingShop.Domain.Identity.Entities.User},Microsoft.Extensions.Options.IOptions{BackingShop.Application.Core.Settings.User.JwtOptions},Microsoft.AspNetCore.Identity.SignInManager{BackingShop.Domain.Identity.Entities.User})">
            <summary>
            Represents the login command handler class.
            </summary>
            <param name="logger">The logger.</param>
            <param name="userManager">The user manager.</param>
            <param name="jwtOptions">The json web token options.</param>
            <param name="signInManager">The sign in manager.</param>
        </member>
        <member name="M:BackingShop.Micro.Identity.Mediatr.Commands.Login.LoginCommandHandler.Handle(BackingShop.Micro.Identity.Mediatr.Commands.Login.LoginCommand,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:BackingShop.Micro.Identity.Mediatr.Commands.Login.LoginCommandValidator">
            <summary>
            Represents the login command validator class.
            </summary>
        </member>
        <member name="M:BackingShop.Micro.Identity.Mediatr.Commands.Login.LoginCommandValidator.#ctor">
            <summary>
            Validate the login command.
            </summary>
        </member>
        <member name="T:BackingShop.Micro.Identity.Mediatr.Commands.Register.RegisterCommand">
            <summary>
            Represents the register command record class.
            </summary>
            <param name="FirstName">The first name.</param>
            <param name="LastName">The last name.</param>
            <param name="Email">The email.</param>
            <param name="Password">The password.</param>
            <param name="UserName">The user name.</param>
        </member>
        <member name="M:BackingShop.Micro.Identity.Mediatr.Commands.Register.RegisterCommand.#ctor(BackingShop.Domain.Common.ValueObjects.FirstName,BackingShop.Domain.Common.ValueObjects.LastName,BackingShop.Domain.Common.ValueObjects.EmailAddress,BackingShop.Domain.Common.ValueObjects.Password,System.String)">
            <summary>
            Represents the register command record class.
            </summary>
            <param name="FirstName">The first name.</param>
            <param name="LastName">The last name.</param>
            <param name="Email">The email.</param>
            <param name="Password">The password.</param>
            <param name="UserName">The user name.</param>
        </member>
        <member name="P:BackingShop.Micro.Identity.Mediatr.Commands.Register.RegisterCommand.FirstName">
            <summary>The first name.</summary>
        </member>
        <member name="P:BackingShop.Micro.Identity.Mediatr.Commands.Register.RegisterCommand.LastName">
            <summary>The last name.</summary>
        </member>
        <member name="P:BackingShop.Micro.Identity.Mediatr.Commands.Register.RegisterCommand.Email">
            <summary>The email.</summary>
        </member>
        <member name="P:BackingShop.Micro.Identity.Mediatr.Commands.Register.RegisterCommand.Password">
            <summary>The password.</summary>
        </member>
        <member name="P:BackingShop.Micro.Identity.Mediatr.Commands.Register.RegisterCommand.UserName">
            <summary>The user name.</summary>
        </member>
        <member name="T:BackingShop.Micro.Identity.Mediatr.Commands.Register.RegisterCommandHandler">
            <summary>
            Represents the register command handler class.
            </summary>
            <param name="logger">The logger.</param>
            <param name="userManager">The user manager.</param>
            <param name="sender">The sender.</param>
            <param name="signInManager">The sign in manager.</param>
            <param name="jwtOptions">The json web token options.</param>
        </member>
        <member name="M:BackingShop.Micro.Identity.Mediatr.Commands.Register.RegisterCommandHandler.#ctor(Microsoft.Extensions.Logging.ILogger{BackingShop.Micro.Identity.Mediatr.Commands.Register.RegisterCommandHandler},Microsoft.AspNetCore.Identity.UserManager{BackingShop.Domain.Identity.Entities.User},MediatR.ISender,Microsoft.AspNetCore.Identity.SignInManager{BackingShop.Domain.Identity.Entities.User},Microsoft.Extensions.Options.IOptions{BackingShop.Application.Core.Settings.User.JwtOptions})">
            <summary>
            Represents the register command handler class.
            </summary>
            <param name="logger">The logger.</param>
            <param name="userManager">The user manager.</param>
            <param name="sender">The sender.</param>
            <param name="signInManager">The sign in manager.</param>
            <param name="jwtOptions">The json web token options.</param>
        </member>
        <member name="M:BackingShop.Micro.Identity.Mediatr.Commands.Register.RegisterCommandHandler.Handle(BackingShop.Micro.Identity.Mediatr.Commands.Register.RegisterCommand,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:BackingShop.Micro.Identity.Mediatr.Commands.Register.RegisterCommandValidator">
            <summary>
            Represents the register command validator class.
            </summary>
        </member>
        <member name="M:BackingShop.Micro.Identity.Mediatr.Commands.Register.RegisterCommandValidator.#ctor">
            <summary>
            Validate the login command.
            </summary>
        </member>
        <member name="T:BackingShop.Micro.Identity.Mediatr.Queries.GetTheUserById.GetTheUserByIdQuery">
            <summary>
            Represents the get user by id query record.
            </summary>
            <param name="UserId">The user identifier.</param>
        </member>
        <member name="M:BackingShop.Micro.Identity.Mediatr.Queries.GetTheUserById.GetTheUserByIdQuery.#ctor(System.Guid)">
            <summary>
            Represents the get user by id query record.
            </summary>
            <param name="UserId">The user identifier.</param>
        </member>
        <member name="P:BackingShop.Micro.Identity.Mediatr.Queries.GetTheUserById.GetTheUserByIdQuery.UserId">
            <summary>The user identifier.</summary>
        </member>
        <member name="T:BackingShop.Micro.Identity.Mediatr.Queries.GetTheUserById.GetTheUserByIdQueryHandler">
            <summary>
            Represents the <see cref="T:BackingShop.Micro.Identity.Mediatr.Queries.GetTheUserById.GetTheUserByIdQuery"/> handler.
            </summary>
            <param name="userRepository">The user repository.</param>
            <param name="userIdentifierProvider">The user identifier provider.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:BackingShop.Micro.Identity.Mediatr.Queries.GetTheUserById.GetTheUserByIdQueryHandler.#ctor(BackingShop.Database.Identity.Data.Interfaces.IUserRepository,BackingShop.Application.Core.Abstractions.Helpers.JWT.IUserIdentifierProvider,Microsoft.Extensions.Logging.ILogger{BackingShop.Micro.Identity.Mediatr.Queries.GetTheUserById.GetTheUserByIdQueryHandler})">
            <summary>
            Represents the <see cref="T:BackingShop.Micro.Identity.Mediatr.Queries.GetTheUserById.GetTheUserByIdQuery"/> handler.
            </summary>
            <param name="userRepository">The user repository.</param>
            <param name="userIdentifierProvider">The user identifier provider.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:BackingShop.Micro.Identity.Mediatr.Queries.GetTheUserById.GetTheUserByIdQueryHandler.Handle(BackingShop.Micro.Identity.Mediatr.Queries.GetTheUserById.GetTheUserByIdQuery,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:BackingShop.Micro.Identity.RequireScopeHandler">
            <summary>
            Represents the require scope authorization handler.
            </summary>
        </member>
        <member name="M:BackingShop.Micro.Identity.RequireScopeHandler.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,BackingShop.Micro.Identity.ScopeRequirement)">
            <summary>
            Handle requirement by authorization handler context.
            </summary>
            <param name="context">The Authorization Handler Context.</param>
            <param name="requirement">The scope requirement.</param>
            <returns></returns>
        </member>
        <member name="T:BackingShop.Micro.Identity.ScopeRequirement">
            <summary>
            Represents the scope requirement record class.
            </summary>
            <param name="Issuer">The issuer.</param>
            <param name="Scope">The scope.</param>
        </member>
        <member name="M:BackingShop.Micro.Identity.ScopeRequirement.#ctor(System.String,System.String)">
            <summary>
            Represents the scope requirement record class.
            </summary>
            <param name="Issuer">The issuer.</param>
            <param name="Scope">The scope.</param>
        </member>
        <member name="P:BackingShop.Micro.Identity.ScopeRequirement.Issuer">
            <summary>
            Gets issuer.
            </summary>
        </member>
        <member name="P:BackingShop.Micro.Identity.ScopeRequirement.Scope">
            <summary>
            Gets scope.
            </summary>
        </member>
    </members>
</doc>
